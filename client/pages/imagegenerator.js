import Head from 'next/head'
import Image from 'next/image'
import * as Icon from 'react-icons/io5'
import { useState } from 'react'
import { Oval } from 'react-loader-spinner'
import Link from 'next/link'

const ImageGenerator = () => {
  const [question, setQuestion] = useState('');
  const [loading, setLoading] = useState(false);

  const [link, setLink] = useState('');
  const [images, setImages] = useState([]);

  function fetchResponse(e) {

    e.preventDefault();

    setLoading(true);

    const postData = async () => {
      const data = {
        question: question,
      };

      const fetchResponse = await fetch("/api/imagegen", {
        method: "POST",
        body: JSON.stringify(data),
      });
      return fetchResponse.json();
    };

    postData().then((res) => {

      const { data } = res;

      //console.log(data.toString());

      setLink(`${data}`);
      images.push(`${data}`);

      setQuestion('')
      setLoading(false);
      window.scrollTo({
        top: 500000,
        behavior: 'smooth'
      });
    });
  }

  //console.log(images);

  return (
    <>
      <Head>
        <title>Alpha Image Generator: Tranfrom your imagination into image!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='flex flex-col justify-between w-full h-full'>
        <div className='fixed flex items-start w-full h-10 p-2'>
          <Link href='/'>
            <Icon.IoArrowBackOutline size={32} />
          </Link>
        </div>
        <div className='flex w-full h-10 p-2' />

        {
          loading &&
          <div className='w-screen h-screen absolute flex flex-col items-center justify-center mt-5'>
              <Oval
                height={80}
                width={80}
                color="#fff"
                wrapperStyle={{}}
                wrapperClass=""
                visible={true}
                ariaLabel='oval-loading'
                secondaryColor="#fff5"
                strokeWidth={2}
                strokeWidthSecondary={2}

              />
          </div>
        }

        <div className='h-full w-screen flex flex-row flex-wrap items-center justify-center gap-2'>
          {
            link && images &&

            images.map((image, index) => (
              <div
                key={index}
              >
                <Image
                  src={image}
                  height={500}
                  width={500}
                  alt='image generated'
                  className='m-auto rounded-md gap-2 w-80 h-80 object-cover'
                />
              </div>
            ))
          }
        </div>

        <div className='bg-slate-900 p-2 border-t h-[80px] w-full lg:px-10 px-2 bottom-0 fixed'>
          <form
            onSubmit={fetchResponse}
            className="flex w-full items-center justify-between gap-2"
          >
            <input
              type="text"
              id="text"
              className="block w-full py-2.5 lg:pl-10 pl-2 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              placeholder="Type your imagination here..."
              required
              value={question}
              onChange={(e) => setQuestion(e.target.value)}
            />
            {
              question &&
              <button
                type="submit"
                className="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700 uppercase"
              >
                Generate
              </button>
            }
          </form>
          <div className='text-center flex text-xs mt-2 gap-2'>
            <p className=''>Developer contact :</p>
            <a
              href="https://t.me/andrianarivoalpha"
              target='_blank'
              rel='noreferrer'
            >
              Telegram
            </a>
          </div>
        </div>

        <div className="p-2 h-[80px] w-full lg:px-10 px-2 bottom-0">
        </div>
      </main>
    </>
  )
}

export default ImageGenerator